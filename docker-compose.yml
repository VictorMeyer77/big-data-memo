version: "3"

services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: ZOOKKEPER
    restart: always
    ports:
      - 2181:218
    network_mode: host

  kafka:
    image: wurstmeister/kafka
    container_name: KAFKA
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_ADVERTISED_HOST_NAME: victor-dinateur
      KAFKA_ZOOKEEPER_CONNECT: victor-dinateur:2181
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1"
    network_mode: host

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: SPARKMASTER
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    network_mode: host

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: SPARKWORKER1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://victor-dinateur:7077"
    network_mode: host

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: SPARKWORKER2
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    environment:
      - "SPARK_MASTER=spark://victor-dinateur:7077"
    network_mode: host

  mongo:
    image: mongo
    restart: always
    container_name: MONGO
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: test
    ports:
      - 27018:27017
    network_mode: host
