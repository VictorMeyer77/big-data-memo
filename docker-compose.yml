version: "3"

services:

  # KAFKA

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: ZOOKEEPER
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    network_mode: host

  broker:
    image: confluentinc/cp-server:5.4.0
    hostname: broker
    container_name: KAFKA_BROKER
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "victor-dinateur:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://victor-dinateur:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: victor-dinateur:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: victor-dinateur:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    network_mode: host

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schema-registry
    container_name: SCHEMA_REGISTRY
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "victor-dinateur:2181"
    network_mode: host

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: CONTROL_CENTER
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'victor-dinateur:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'victor-dinateur:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://victor-dinateur:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    network_mode: host

  # SPARK

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: SPARKMASTER
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    network_mode: host

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: SPARKWORKER1
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    environment:
      - "SPARK_MASTER=spark://victor-dinateur:7077"
    network_mode: host

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: SPARKWORKER2
    depends_on:
      - spark-master
    ports:
      - "8083:8083"
    environment:
      - "SPARK_MASTER=spark://victor-dinateur:7077"
    network_mode: host

  # DATABASE

  mongo:
    image: mongo
    restart: always
    container_name: MONGO
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: test
    ports:
      - 27018:27017
    network_mode: host
